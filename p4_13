Write a Java program that creates a producer-consumer
system using threads. The producer thread should
generate random numbers and add them to a shared
buffer, while the consumer thread should remove
numbers from the buffer and calculate their square
roots. Make sure that the producer and consumer
threads do not access the shared buffer at the same
time.

import java.util.LinkedList;
import java.util.Queue;
import java.util.Random;

class Producer extends Thread {
    private Queue<Integer> buffer;
    private int maxSize;

    public Producer(Queue<Integer> buffer, int maxSize) {
        this.buffer = buffer;
        this.maxSize = maxSize;
    }

    public void run() {
        Random rand = new Random();

        while (true) {
            synchronized (buffer) {
                while (buffer.size() >= maxSize) {
                    try {
                        buffer.wait(); // Wait if the buffer is full
                    } catch (InterruptedException e) {
                        e.printStackTrace();
                    }
                }

                int num = rand.nextInt(100); // Generate a random number
                buffer.offer(num); // Add the number to the buffer
                System.out.println("Produced: " + num);
                buffer.notifyAll(); // Notify consumer thread
            }

            try {
                Thread.sleep(1000); // Sleep for 1 second
            } catch (InterruptedException e) {
                e.printStackTrace();
            }
        }
    }
}

class Consumer extends Thread {
    private Queue<Integer> buffer;

    public Consumer(Queue<Integer> buffer) {
        this.buffer = buffer;
    }

    public void run() {
        while (true) {
            synchronized (buffer) {
                while (buffer.isEmpty()) {
                    try {
                        buffer.wait(); // Wait if the buffer is empty
                    } catch (InterruptedException e) {
                        e.printStackTrace();
                    }
                }

                int num = buffer.poll(); // Remove a number from the buffer
                double sqrt = Math.sqrt(num); // Calculate square root
                System.out.println("Consumed: " + num + ", Square root: " + sqrt);
                buffer.notifyAll(); // Notify producer thread
            }

            try {
                Thread.sleep(1000); // Sleep for 1 second
            } catch (InterruptedException e) {
                e.printStackTrace();
            }
        }
    }
}

public class Main {
    public static void main(String[] args) {
        system.out.println("memdavadi riddhi ,220130318035");
        Queue<Integer> buffer = new LinkedList<>();
        int maxSize = 10;

        Producer producer = new Producer(buffer, maxSize);
        Consumer consumer = new Consumer(buffer);

        producer.start();
        consumer.start();
    }
}

